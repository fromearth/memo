#################################################################
# 変数
#
# @filename var.txt
# @category Shell
# @package  ShellVar
# @author   fromearth
# @link     https://github.com/fromearth
#################################################################


###############################
# シェル変数と環境変数について
###############################
・シェル変数 .. 現在実行中のあいだだけ有効な変数。
・環境変数   .. シェル実行前後で引き継がれる変数。



###############################
# 変数に値を代入
###############################

## Bシェル系
VAR=foo            # 文字列代入
VAR="foo"          # ダブルクォートで囲んでも同じ
VAR=99             # 数値代入
VAR=`expr 1 + 2`   # コマンド結果を代入
export VAR         # 環境変数として反映させる

export VAR=foo     # 上記を合わせて、環境変数への代入を一気に行う

unset VAR          # 変数を削除


## Cシェル系
set VAR foo        # 変数代入
setenv VAR foo     # 環境変数の定義



###############################
# 特殊変数
###############################
$$      ...プロセスID
$!      ...最後に実行したバックグラウンドプロセスID
$?      ...最後に実行したコマンドの終了コード（戻り値）
$-      ...setコマンドで設定したフラグ一覧
$*      ...全引数リスト
$@      ...全引数リスト。"$*"と"$@"では展開の違いがある
$#      ...引数の数
$0      ...シェルスクリプトのファイルパス
$1-$n   ...引数の値



###############################
# 局所変数の宣言 / local
###############################
func() {
    // 関数内だけで使いたい変数に適用
    local var=foo
    echo $var
}



###############################
# シェル変数の条件付き変数展開
###############################
${VAR:-expr}    // ${VAR}未定義なら、:-以降の式を評価した結果を返す
${VAR:+expr}    // ${VAR}定義されていれば、:+以降の式を評価した結果を返す
${VAR:=expr}    // ${VAR}未定義なら、:=以降の式を評価した結果を返し変数にも代入
${VAR:?[expr]}  // ${VAR}未定義なら、式を標準エラーへ出力して終了

${#VAR}         // 文字列長を返す

${VAR%pattern}  // 末尾から最短マッチを削除
${VAR%%pattern} // 末尾から最長マッチを削除
${VAR#pattern}  // 先頭から最短マッチを削除
${VAR##pattern} // 先頭から最長マッチを削除

# コマンドライン引数処理例
${0}       ...実行コマンドパス  /path/to/cmd
${0##*/}   ...先頭から/まで最長マッチさせてそれを削除  /path/to/ がマッチするので cmd

${0%/*}    ...後方から/まで最短マッチさせてそれを削除  /cmd がマッチするので /path/to

${1+"$@"}  ...1つ目引数${1}がセットされていない場合は+演算子によりnull値となり、セットされている場合は+以降の値"$@"により全引数がスペース区切りで展開される

# 使用例  何もしないコマンド : を行頭に書くと見栄えがいい
: ${VAR:=expr}



###############################
# 文字列リテラルの変数展開
###############################
'$var'     // そのまま展開されずに$var
"$var"     // 展開されて変数値となる



###############################
# コマンド展開
###############################
`cat file1`    // file1内容が展開される（改行は半角スペースに）
$(cat file1)   // file1内容が展開される（改行は半角スペースに）
"$(cat file1)" // file1内容が展開される（改行はそのまま）



###############################
# 改行コードの付加
###############################
var="foo
"
