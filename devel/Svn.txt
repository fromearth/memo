◆ Subversionを使ったファイルバージョン管理


## リモートにある中央リポジトリからソース一式を取ってくる（はじめに一度だけ）
$ svn checkout [URL] [/path/to/local/dir]
(ローカルの dir に展開する例)


## リモートで更新されてる分を、ローカルに取得（最新のソースに保つ）
$ svn update

これはローカルで行った編集をやめて、ファイルを元に戻したい場合に一旦削除して復元する場合にも使う
$ rm /path/to/filename
$ svn update /path/to/filename


## ファイル編集からコミット（中央リポジトリへ送る）までの流れ
$ svn update
$ vi /path/to/file
$ svn update
$ svn commit -m "/path/to/file edited" /path/to/file


## 編集したファイルがどれかを確認
$ svn status

行頭 M が編集したファイル（Modified）
行頭 ? は、まだリポジトリ管理できてないファイルなので追加する場合は svn add file


## 特定ファイルのコミットログ履歴を確認
$ svn log /path/to/file

これをやると、リビジョン番号を確認できる


## 指定リビジョンのファイルを取得する
$ svn log /path/to/file
でリビジョンを確認する。
このときリビジョン番号が r155 だとすると、以下のようにする
$ svn cat -r 155 /path/to/file.ext >file_r155.ext


## 編集ファイルとリポジトリ間の差異を見る
$ svn diff /path/to/file


######### 複数ファイルを指定して追加したり、コミットしたりする
$ svn add /path/to/file1 /path/to/file2 /path/to/file3

作成してまだリポジトリ管理されてないファイルはcommitより先にaddして認識させる。

$ svn commit -m "message here" /path/to/file1 /path/to/file2 /path/to/file2

もしファイルを指定しないで単に「svn commit -m "message"」とすると、編集ファイルすべてが対象となる。



